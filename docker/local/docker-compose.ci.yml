name: "LogChimp-CI"

services:
  cache:
    image: valkey/valkey:8
    ports:
      - "6379:6379"
    networks:
      - ci-network

  db:
    image: postgres:17.6
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-db}
      POSTGRES_USER: ${POSTGRES_USER:-lc}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    networks:
      - ci-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  mail:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - ci-network

  server:
    build:
      dockerfile: ./packages/server/Dockerfile
      context: ../..
      args:
        DOCKER_BUILDKIT: 1
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-ci}
      PORT: ${API_PORT:-8000}
      LOGCHIMP_IS_SELF_HOSTED: true
      LOGCHIMP_SECRET_KEY: ${LOGCHIMP_SECRET_KEY}
      LOGCHIMP_MACHINE_SIGNATURE: ${LOGCHIMP_MACHINE_SIGNATURE}
      LOGCHIMP_WEB_URL: ${LOGCHIMP_WEB_URL}
      # Database
      LOGCHIMP_DB_HOST: db
      LOGCHIMP_DB_DATABASE: ${POSTGRES_DB:-db}
      LOGCHIMP_DB_PORT: 5432
      LOGCHIMP_DB_USER: ${POSTGRES_USER:-lc}
      LOGCHIMP_DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      # Cache
      LOGCHIMP_VALKEY_URL: cache:6379
      # Mail
      LOGCHIMP_MAIL_HOST: mail
      LOGCHIMP_MAIL_PORT: 1025
    ports:
      - "8000:8000"
    networks:
      - ci-network

  client:
    build:
      dockerfile: ./packages/theme/Dockerfile
      context: ../..
      args:
        DOCKER_BUILDKIT: 1
    environment:
      NODE_ENV: ${NODE_ENV:-ci}
      PORT: ${THEME_PORT:-3000}
      VITE_API_URL: ${LOGCHIMP_API_URL}
      VITE_IS_SELF_HOSTED: true
      VITE_SHOW_TELEMETRY_FORM: true
    ports:
      - "3000:3000"
    networks:
      - ci-network

networks:
  ci-network:
    driver: bridge
