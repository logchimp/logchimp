name: "LogChimp-Dev"

services:
  db:
    image: postgres:12
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: lc
      POSTGRES_PASSWORD: password
    networks:
      - dev-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data

  # Local SMTP mailbox
  mail:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - dev-network

  logchimp:
    build:
      dockerfile: docker/local/server.Dockerfile
      context: .
      args:
        DOCKER_BUILDKIT: 1
    volumes:
      - .:/app
      - pnpm_store:/root/.local/share/pnpm
      - /app/node_modules
      - /app/packages/server/node_modules
      - /app/packages/types/node_modules
      - /app/packages/server/dist
      - /app/packages/types/dist
      - lc_ts_types:/app/packages/types/dist
    depends_on:
      - types-watcher
      - db
    networks:
      - dev-network
    environment:
      PNPM_HOME: /root/.local/share/pnpm
      PORT: 8000
      # Database
      LOGCHIMP_DB_HOST: db
      LOGCHIMP_DB_DATABASE: db
      LOGCHIMP_DB_PORT: 5432
      LOGCHIMP_DB_USER: lc
      LOGCHIMP_DB_PASSWORD: password
      # Mail
      LOGCHIMP_MAIL_HOST: mail
      LOGCHIMP_MAIL_PORT: 1025
      LOGCHIMP_MAIL_USER: test
      LOGCHIMP_MAIL_PASSWORD: test
    env_file:
      - packages/server/.env
    ports:
      - "8000:8000"

  # Types package auto-rebuild service
  types-watcher:
    image: node:22-alpine
    volumes:
      - .:/app
      - pnpm_store:/root/.local/share/pnpm
      - /app/node_modules
      - /app/packages/server/node_modules
      - /app/packages/types/node_modules
      - lc_ts_types:/app/packages/types/dist
    working_dir: /app
    command: sh ./packages/types/types-watcher.sh
    environment:
      NODE_ENV: development
      PNPM_HOME: /root/.local/share/pnpm
      npm_config_store: /root/.local/share/pnpm/store
    networks:
      - dev-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "test", "-f", "packages/types/dist/index.js" ]
      interval: 10s
      timeout: 5s
      retries: 3
    stop_signal: SIGTERM
    stop_grace_period: 10s

  # theme:
  #   image: logchimp-theme:0.2.0
  #   environment:
  #     API_HOST: logchimp
  #     command: /logchimp/scripts/run_nginx.sh
  #   depends_on:
  #     - logchimp

networks:
  dev-network:
    driver: bridge

volumes:
  pg_data:
  lc_ts_types:
    name: "logchimp-dev-ts-types-compiled"
  pnpm_store:
    name: "logchimp-dev-pnpm-store"