name: Test

on:
  push:
    paths:
      - ".github/workflows/test.yml"
      - "packages/**"
      - "server/**"
      - "tests/**"
      - "package.json"
      - "pnpm-lock.yaml"
  workflow_dispatch:

permissions:
  actions: read

jobs:
  utils:
    name: Run utilities
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-

      - name: Install packages
        run: pnpm install --frozen-lockfile

      - name: Install Biome
        uses: biomejs/setup-biome@v1
        with:
          version: latest

      - name: Biome format
        run: biome ci .
        continue-on-error: true

  theme-unit:
    name: Theme / Unit Tests - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    needs: utils

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-

      - name: Install packages
        run: pnpm install --frozen-lockfile

      - name: Testing
        run: pnpm --filter @logchimp/theme test:unit

  theme-build:
    name: Theme / Build - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    needs: [theme-unit]

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-

      - name: Install packages
        run: pnpm install --frozen-lockfile

      - name: Build theme
        run: pnpm --filter @logchimp/theme build

  api-unit:
    name: API / Unit Tests - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    needs: utils

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-

      - name: Install packages
        run: pnpm install --frozen-lockfile

      - name: Testing
        run: pnpm --filter @logchimp/api test:unit

  api-integration:
    name: API / Integration Tests - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    needs: [api-unit]

    strategy:
      matrix:
        node: [16]
        os: [ubuntu-20.04]

    services:
      postgres:
        image: postgres:12.16
        env:
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: Cache .pnpm-store
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ matrix.os }}-OS-node-v${{ matrix.node }}-pnpm-

      - name: Install packages
        run: pnpm install --frozen-lockfile

      - name: Create logchimp config file
        run: |
          PG_DATABASE=${{ secrets.TEST_DB_NAME }} \
          PG_HOST="localhost" \
          PG_USER=${{ secrets.TEST_DB_USER }} \
          PG_PASSWORD=${{ secrets.TEST_DB_PASSWORD }} \
          PG_PORT=5432 \
          THEME_STANDALONE="false" \
          SECRET_KEY=${{ secrets.TEST_SECRET_KEY }} \
          MAIL_SERVICE="logchimp" \
          MAIL_HOST="smtp.example.com" \
          MAIL_USER="logchimp@example.com" \
          sh ./scripts/create-config.sh

      - name: Testing
        run: |
          # Run database migrations
          pnpm --filter @logchimp/api db:migrate 

          # Seeding database
          pnpm --filter @logchimp/api db:seed:run 

          # Running integration test
          pnpm --filter @logchimp/api test:integration
        env:
          NODE_ENV: "testing"

      - name: Output logs
        if: always()
        run: cat ./content/logs/logchimp-all.log

      - name: Store Code Coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage
