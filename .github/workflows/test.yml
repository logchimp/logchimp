name: Test

on:
  push:
    branches: [main,master]
    paths:
      - ".github/workflows/test.yml"
      - "packages/**"
      - "package.json"
      - "pnpm-lock.yaml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/test.yml"
      - "packages/**"
      - "package.json"
      - "pnpm-lock.yaml"
  workflow_dispatch:

permissions:
  actions: read

env:
  pnpm-version: 10

jobs:
  theme-unit:
    name: Theme / Unit Tests - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [22]
        os: [ubuntu-24.04]

    steps:
      - uses: actions/checkout@v4

      - uses: codecarrotlabs/github-actions/.github/actions/node-pnpm@c7e1e7605a3c05a042093219be7020e35b66f494
        with:
          node_version: ${{ matrix.node }}
          pnpm_version: ${{ env.pnpm-version }}

      - name: Testing
        run: pnpm --filter @logchimp/theme test:unit

  theme-build:
    name: Theme / Build - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    needs: [theme-unit]

    strategy:
      matrix:
        node: [22]
        os: [ubuntu-24.04]

    steps:
      - uses: actions/checkout@v4

      - uses: codecarrotlabs/github-actions/.github/actions/node-pnpm@c7e1e7605a3c05a042093219be7020e35b66f494
        with:
          node_version: ${{ matrix.node }}
          pnpm_version: ${{ env.pnpm-version }}

      - name: Compile LogChimp Types package
        run: pnpm --filter="@logchimp/types" build;

      - name: Build theme
        run: pnpm --filter @logchimp/theme build

  api-typecheck:
    name: API / Typecheck - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [22]
        os: [ubuntu-24.04]

    steps:
      - uses: actions/checkout@v4

      - uses: codecarrotlabs/github-actions/.github/actions/node-pnpm@c7e1e7605a3c05a042093219be7020e35b66f494
        with:
          node_version: ${{ matrix.node }}
          pnpm_version: ${{ env.pnpm-version }}

      - name: logchimp/type typecheck
        run: pnpm --filter @logchimp/types exec pnpm tsc

      - name: API typecheck
        run: pnpm --filter @logchimp/api exec pnpm tsc --noEmit

  api-unit:
    name: API / Unit Tests - OS ${{ matrix.os }} - Node v${{ matrix.node }}
    runs-on: ${{ matrix.os }}
    needs: [api-typecheck]

    strategy:
      matrix:
        node: [22]
        os: [ubuntu-24.04]

    steps:
      - uses: actions/checkout@v4

      - uses: codecarrotlabs/github-actions/.github/actions/node-pnpm@c7e1e7605a3c05a042093219be7020e35b66f494
        with:
          node_version: ${{ matrix.node }}
          pnpm_version: ${{ env.pnpm-version }}

      - name: Testing
        run: pnpm --filter @logchimp/api test:unit

  api-integration:
    name: API / Integration Tests - OS ${{ matrix.os }} - Node v${{ matrix.node }} - Postgres v${{ matrix.postgres }}
    runs-on: ${{ matrix.os }}
    needs: [api-unit]

    env:
      NODE_ENV: "ci"
      LOGCHIMP_DB_DATABASE: db
      LOGCHIMP_DB_HOST: "localhost"
      LOGCHIMP_DB_USER: user
      LOGCHIMP_DB_PASSWORD: password
      LOGCHIMP_DB_PORT: 5432
      LOGCHIMP_VALKEY_URL: redis://localhost:6379
      LOGCHIMP_SECRET_KEY: bk6oqo21tbygcsnuflnda3whdyj7leav2w39wcmleqw2j4i5hcdwjam0tzropaevhl3h_dbnljdtyz0tb25yg1o1pak8nakgzm4tza6qp
      LOGCHIMP_WEB_URL: "http://localhost:3000"
      LOGCHIMP_MAIL_HOST: 0.0.0.0
      LOGCHIMP_MAIL_USER: test
      LOGCHIMP_MAIL_PASSWORD: test
      LOGCHIMP_MAIL_PORT: 1025

    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22]
        postgres: [12.18, 14, 16, 17]
        os: [ubuntu-24.04]

    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_DB: db
          POSTGRES_USER: user
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      cache:
        image: valkey/valkey:8
        ports:
          - "6379:6379"
      mail:
        image: mailhog/mailhog
        ports:
          - 1080:1080
          - 1025:1025

    steps:
      - uses: actions/checkout@v4

      - uses: codecarrotlabs/github-actions/.github/actions/node-pnpm@c7e1e7605a3c05a042093219be7020e35b66f494
        with:
          node_version: ${{ matrix.node }}
          pnpm_version: ${{ env.pnpm-version }}

      - name: Compile LogChimp Types package
        run: pnpm --filter="@logchimp/types" build;

      - name: Database setup
        run: |
          cd ./packages/server

          # Run database migrations
          pnpm knex --knexfile ./src/database/config.ts migrate:latest

          # Seeding database
          pnpm knex --knexfile ./src/database/config.ts seed:run

      - name: Testing
        run: pnpm --filter @logchimp/api test:integration --retry 1

      - name: Output logs
        if: always()
        run: |
          LOG_PATH="content/logs/logchimp-all.log"
          if [ -f "$LOG_PATH" ]; then
            cat "$LOG_PATH"
          fi

      - name: Store Code Coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-node@22-pg@${{ matrix.postgres }}
          path: ./coverage
